#!/bin/sh

# Use programs if we've got 'em
[ -x "$(command -v nvim)" ] && alias vim="nvim" vimdiff="nvim -d"
[ -x "$(command -v emacsclient)" ] && alias ed="emacsclient -t -a nvim"

# Verbosity settings
alias \
  cp="cp -iv" \
  df="df -h" \
  free="free -m" \
  mv="mv -iv" \
  rm="rm -vI" \
  mkd="mkdir -pv"

# I have opinions on how calendars work that differ from my locale
alias cal="cal -m"

# Pretty colors!
alias \
  diff="diff --color=auto" \
  grep="grep --color=auto" \
  ls="exa --icons --color=always" \
  less="less -R"

# Shorten commands that I use ALL. THE. TIME.
alias \
  dcli="dropbox-cli" \
  l="less" \
  la="ls -a" \
  ll="ls -lag" \
  lamk="latexmk -xelatex -shell-escape" \
  pac="pacman" \
  spac="sudo pacman" \
  sctl="systemctl --user" \
  ssctl="sudo systemctl" \
  xo="xdg-open" \
  z="zathura"

# Alias shortcuts to commonly-tweaked config files
alias \
  cfa="$VISUAL ~/dotfiles/config/shell/aliasrc" \
  cfq="$VISUAL ~/dotfiles/config/qtile/config.py" \
  cfz="$VISUAL ~/dotfiles/zshrc" \
  cfzd="$VISUAL ~/dotfiles/config/shell/zshnameddirrc"

# Some alias-like functions, for fun and profit
lr () {
  [ $# -lt 1 ] && lr ./ && return 0
  exa --icons --color=always -lagT --git --git-ignore "$@" | less -F
}

ccat () {
  pygmentize "$1" | less -RF
}

lamkp () {

  if [ $# -ne 1 ]; then
    printf "lamkp - Autobuild and preview LaTeX files\nUsage: lamkp <filename>\n"
    return 1
  else
    if echo "$1" | grep -E '.*\.tex'; then
      doc_source="$1"
      doc_output="${1%.*}.pdf"
    elif echo "$1" | grep -E '.*\.pdf'; then
      doc_source="${1%.*}.tex"
      doc_output="$1"
    elif ! echo "$1" | grep -E '.*\..*'; then
      doc_source="$1.tex"
      doc_output="$1.pdf"
    else
      echo "$1 is an unsupported source format. Exiting..."
      return 1
    fi
  fi

  if [ -f "$doc_output" ]; then
    echo "Document $doc_output exists. Previewing..."
    zathura "$doc_output" &
    latexmk -xelatex -shell-escape -pvc "$doc_source"
  else
    latexmk -xelatex -shell-escape "$doc_source"
    lamkp "$doc_source"
  fi
}

shnew () {
  if [ $# -ne 1 ]; then
    printf "shnew - Create a new shell script\nUsage: shnew <filename>\n"
    return 1
  fi
  echo "#!/usr/bin/env sh" > $1
  chmod 755 $1
}
